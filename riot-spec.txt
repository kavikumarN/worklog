Start after booting machine:

cd ~/synapse
source env/bin/activate
synctl start


Reference:

https://github.com/matrix-org/synapse/blob/master/INSTALL.md

Installation & dependencies:
sudo apt-get install build-essential python3-dev libffi-dev \
                     python-pip python-setuptools sqlite3 \
                     libssl-dev python-virtualenv libjpeg-dev libxslt1-dev

installation: 

mkdir -p ~/synapse
virtualenv -p python3 ~/synapse/env
source ~/synapse/env/bin/activate
pip install --upgrade pip
pip install --upgrade setuptools
pip install matrix-synapse[all]

(opt)
sudo apt install -y lsb-release curl apt-transport-https
echo "deb https://matrix.org/packages/debian `lsb_release -cs` main" |
    sudo tee /etc/apt/sources.list.d/matrix-org.list
curl "https://matrix.org/packages/debian/repo-key.asc" |
    sudo apt-key add -
sudo apt update
sudo apt install matrix-synapse-py3

(opt for 2nd time)

sudo apt update
sudo apt install matrix-synapse-py3



upgrade(optional):

source ~/synapse/env/bin/activate
pip install -U matrix-synapse[all]


Before start Synapse, you will need to generate a configuration file. To do this, run (in your virtualenv, as before)::

    cd ~/synapse
python -m synapse.app.homeserver \
    --server-name my.domain.name \
    --config-path homeserver.yaml \
    --generate-config \
    --report-stats=[yes|no]


python -m synapse.app.homeserver     --server-name 192.168.1.145     --config-path homeserver.yaml     --generate-config --report-stats=yes|no


** run home server:

cd ~/synapse
source env/bin/activate
synctl start




register new user:

register_new_matrix_user -c homeserver.yaml http://localhost:8008
New user localpart [root]: mat
Password: 
Confirm password: 
Make admin [no]: 
Sending registration request...
Success!



generate localhost key:
openssl req -x509 -out localhost.crt -keyout localhost.key \
  -newkey rsa:2048 -nodes -sha256 \
  -subj '/CN=localhost' -extensions EXT -config <( \
   printf "[dn]\nCN=localhost\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:localhost\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth")

openssl req -x509 -out 192.168.1.145.crt -keyout 192.168.1.145.key \
  -newkey rsa:2048 -nodes -sha256 \
  -subj '/CN=192.168.1.145' -extensions EXT -config <( \
   printf "[dn]\nCN=localhost\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:192.168.1.145\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth")



