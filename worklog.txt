21-2-18:

    QT application converter for web assembly.
    Study on RIOT Messenger configuration.
    
 22-2-18:
 
    Qt installation on web assembly: git://code.qt.io/qt/qtbase.git in the 'wip/webassembly' branch,
    INstallation succeeded, due to installation over emscripten-master tag issue application has failed to initiate in browser environment.
    
    
  23-2-18:
  
  Qt installation from the repository: https://github.com/qt/qtbase/tree/wip/webassembly to bind emscripten and zeromq together has failed to bind the above things together. Build failed with both master and incoming branches.
  
  log and links: https://github.com/kavikumarN/worklog/blob/master/Qt-emscripten.txt
  
  25-2-18:
        
        https://github.com/jonwoodring/emscripten-electron-boilerplate
        
        electron installation for emscripten build. electron transforms native code into web environment. 
        
        electron has both emscripten and zeromq support. 
        
        zeromq support is provided through https://www.npmjs.com/package/jerry-zeromq
        
        
        tried to find an alternate to zeromq: https://github.com/nanomsg/nanomsg
        
        build requires Cmake Ninja. 
        
        failed to dependencies ninja.
        
        raised an issue in github nanomsg repo.
        
        link: https://github.com/nanomsg/nanomsg/issues/1017
        
    26-2-18:
    
        installation of debian 9.
        
        issue with VGA drivers since the VGA cord has adapter to dvi-1 port. It doesnt support full resolution of 1920x1080. 
        
        NVIDEA graphics andf opensource drivers failed to clear the issue.
        
     27-2-18
        reinstallation of debian with 3rd party drivers from iso: https://caesar.ftp.acc.umu.se/debian-cd/current/amd64/iso-cd/debian-9.8.0-amd64-netinst.iso  
        
        cleared issue with vga drivers installting amd x64 drivers.
        
        and  following cmds: 
        
        cvt -r 1920 1080&&xrandr --newmode "1920x1080R"  138.50  1920 1968 2000 2080  1080 1083 1088 1111 +hsync -vsync&&xrandr --addmode VGA-1 1920x1080R&&xrandr --listactivemonitors



   28-2-18
   
   
             reinstallion of emscripten on debian environment, from incoming branch. 
            
             reinstallation of zeromq cpp binding. 
            
             build succeeded to create static library but test and example programs fails to run.
            
             raised issue on zeromq github repo.
            
  
             emscripten study on embinding to use inbuilt js libraries such as websockets and 3rd party library web sockify.
              
             web sockets on emscripten.
              
             building emscripten web sockets. 
              
             link: https://blog.squareys.de/emscripten-sockets/
           
    
 1-3-19: 
               installation of zeromq both static and dynamic has been tried with emscripten-incoming. it uses static libraries and another library called unity.a and rt lib. 
             
             https://github.com/emscripten-core/emscripten/pull/7672
             
             
 04-03 19
            building emscripten websockets on https://github.com/zeromq/zwssock
            
            it has czmq binding as dependency. 
            
            ZWS JSMQ library implement ZWS on the browser side.
            
            JSMQ is javascript library which implements the ZWS protocol, on nodejs environment. 
            
  05-03-19 
  
  
            study on web sockets. 
            
            study on web sockify.
            
            tried to implemet websockets on emscripten, test failes to run.
            
  06-03-19
  
            study on emscripten load dynamic libraries using DLopen methods.
            
            web assembly load modules without javascrit helpers.
            
            
            poco libraries installation for web sockets (continue to link: https://blog.squareys.de/emscripten-sockets/ )
            
            
            
  07-03-19 
            
            
            built nng  for emscripten environment.
            
            failed to run. 
            
            issue raised same as while building nanomsg.
            
            
  08-03-19
            
            study on binding nodejs zmq with emscripten.
            
            
           study on emscripten nodejs binding. 
           
  
  11-03-19
  
            https://github.com/nodejs/node-addon-examples/blob/master/1_hello_world/node_0.12/package.json
            
            
            study on nodejs streaming file operations to json file.
            
            
           study on emscripten streaming file operations using FETCH API.
           
           
  12-03-19
  
            binding node jsmq server and client with json file.
            
            study on Ajax Jquery & Ajax in Web Assembly:
            
            https://magnealvheim.wordpress.com/2017/12/31/a-simple-webassembly-experiment/
            
            streaming download for fetch api.
            
            matrix riot reinstallation since nginx server failed to start after configuration.
            
            
   13-03-18
   
            https://www.cyberciti.biz/faq/howto-install-setup-nginx-on-debian-linux-9/
            
            matrix server and synapsis installation  done. faailed to start nginx server again though
            
            nginx server standalone is runing well. 
            
            reference: complete riot workshop : https://gist.github.com/attacus/cb5c8a53380ca755b10a5b37a636a0b9
            
            
   14-08-18
            
            
            study on c++ addon for nodejs to bind emscripten c++ code and nodejs zmq client/server. 
            
            study on nodejs sqlite: https://github.com/mapbox/node-sqlite3 to bind node js code and comlied web aseembly js helpers glue code.
            
            
   15-08-18
            
            study on lowdb, a nodejs module, to access streaming json files through node js. then the json file feeds input to the user end in js glue code.
            
            https://github.com/kavikumarN/lowdb
   
            implemented zeromq nodejs binding and lowdb which writes server responses to the json file. where js code takes input from json file. 
            
            implemented code : https://github.com/kavikumarN/backup/tree/master/13mar/db
            
            
   16-08-18 :
   
            
            RIOT matrix server installation ubuntu. tried with public matrix domain. 
            
            
            
            
            
          
          
            
    
            
            
            
  
              
            
            
            
   
            
 
                
                
    
    
 
    
    
    
